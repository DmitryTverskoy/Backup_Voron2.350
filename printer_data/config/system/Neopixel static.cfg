# Макросы для настройки индикаторов состояния на инструментальной головке Voron StealthBurner (или для любых светодиодов типа neopixel).
#
# Вам нужно будет настроить neopixel (или другой адресуемый светодиод, такой как dotstar). Подробности конфигурации см. в разделе
# https://www.klipper3d.org/Config_Reference.html#neopixel.


#####################################
#            ИНСТРУКЦИИ             #
#####################################
# Как всем этим пользоваться:
#
# 1. Скопируйте этот файл .cfg в свой конфигурационный каталог Klipper, а затем добавьте [включить stealthburner_leds.cfg]
# в верхнюю часть вашего файла printer.cfg, чтобы зарегистрировать светодиоды и макросы в Klipper.
# 2. Определите ваши светодиоды, отредактировав [neopixel sb_leds] ниже и введя PIN-код с вашей платы управления
#, а также порядок цветов.
#
# Примечание: RGB и RGBW различны и должны быть определены явно.  RGB и RGBW также не могут быть объединены 
# в одной цепочке. Для правильной работы потребуется отдельная линия передачи данных.
#
# Светодиоды RGBW будут иметь видимую желтую часть люминофора на чипе.  Если ваши светодиоды не имеют
# в этой желтой части у вас есть светодиоды RGB.
#
# 3. Сохраните конфигурацию и перезапустите Klipper.
#
# Примечание: Мы установили для красного и синего значения 1.0, чтобы пользователям и сторонникам было проще их обнаруживать. 
# неправильная конфигурация или неправильное подключение. Цветовой формат по умолчанию используется для Neopixels со специальным 
# белый светодиод. При запуске должны загореться все три светодиода SB.
# 
# Если вы получаете случайные цвета на светодиодах, измените color_order на GRB и перезапустите. Затем
# опустите W для каждого предлагаемого color_order в следующем абзаце.
#
# Если вы получаете пурпурный, ваш порядок цветов правильный. Если вы получаете голубой, вам нужно использовать RGBW. Если
# если появится желтый цвет, вам нужно использовать BRGW (обратите внимание, что BRG поддерживается только в последней версии Klipper
#).
#
# 4. После того, как вы убедитесь, что светодиоды настроены правильно, теперь вы должны решить, где вы хотите. 
# эти макросы вызываются ... что означает добавление их к вашим существующим макросам gcode.  НИЧЕГО не произойдет
# если вы не добавите макросы STATUS_????? к существующим макросам gcode.  
#
# Пример: добавьте STATUS_LEVELING в начало вашего макроса QGL gcode, а затем добавьте STATUS_READY 
# до конца, чтобы вернуть светодиоды логотипа и форсунок в состояние `готово`.
#
# Пример: добавьте STATUS_CLEANING в начало макроса очистки форсунок, а затем STATUS_READY
# до конца, чтобы вернуть светодиоды в состояние `готовности`.
#
# 5. Не стесняйтесь изменять цвета каждого макроса, создавайте новые, если у вас есть необходимость.  Макросы, представленные ниже
# просто пример, что это возможно.  Если вы хотите попробовать более сложные анимации, вы будете самым
# скорее всего, придется использовать экран с Moonraker и небольшой микро-контроллер 
#
#####################################
#        КОНЕЦ ИНСТРУКЦИЙ           #
#####################################

[neopixel sb_leds]
pin: EBBCan:PD3
chain_count: 3
color_order: GRBW
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
# Задает начальный цвет светодиода Neopixel. Каждое значение должно быть
# в диапазоне от 0.0 до 1.0. Белый вариант доступен только для RGBW
# Светодиоды. Значение по умолчанию для каждого цвета равно 0.#

[neopixel caselight]
pin: PD15
chain_count: 93
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.7

# [led_effect light]
# leds:
#    neopixel:caselight
# autostart:  false
# frame_rate: 24
# layers:
#     static  0  0     top        (0.3, 0.3, 0.3, 0.7)

# Большая часть настроек для макросов может быть выполнена путем изменения переменных в макросе _sb_vars
# в начале этого файла.

##########
# MACROS #
##########

# Доступны следующие макросы состояния (они находятся внутри ваших макросов):
#
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
#    STATUS_END
#
# С дополнительными макросами для базового управления:
#
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF
#
# Предоставлено пользователями Voron discord wile.e, Tetsunosuke и etherwalker


[gcode_macro _sb_vars]
# Пользовательские настройки светодиодов состояния StealthBurner. Вы можете изменить цвета состояния и светодиоды
# настройки логотипа и сопла здесь.
variable_colors: {
        'logo': { # Цвета для состояний логотипа
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
            'end': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 1.0},
        },
        'nozzle': { # Цвета для состояний сопел
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
            'end': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w':0.0},
        },
        'caselight': { # Цвета для состояний корпуса
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
            'end': {'r': 0.0, 'g': 1.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
variable_logo_led_name:         "sb_leds" 
# Название адресуемой светодиодной цепочки, содержащей светодиоды с логотипом
variable_logo_idx:              "1" 
# Список индикаторов индексов, разделенных запятыми, в логотипе
variable_nozzle_led_name:       "sb_leds"
# Название адресуемой светодиодной цепочки, содержащей светодиоды сопла. Обычно это будет
# та же светодиодная цепочка, что и логотип.
variable_nozzle_idx:            "2,3"
# Список индексов светодиодов в сопле, разделенных запятыми
gcode:
    # Этот раздел обязателен.  Не удаляйте.


[gcode_macro _set_sb_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_sb_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro set_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro set_nozzle_leds_on]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro set_nozzle_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro status_off]
gcode:
    set_logo_leds_off transmit=0
    set_nozzle_leds_off

[gcode_macro status_ready]
gcode:
    _set_sb_leds_by_name leds="logo" color="standby" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro status_busy]
gcode:
    _set_sb_leds_by_name leds="logo" color="busy" transmit=0
    set_nozzle_leds_on

[gcode_macro status_heating]
gcode:
    _set_sb_leds_by_name leds="logo" color="heating" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="heating" transmit=1

[gcode_macro status_leveling]
gcode:
    _set_sb_leds_by_name leds="logo" color="leveling" transmit=0
    set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    _set_sb_leds_by_name leds="logo" color="homing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    _set_sb_leds_by_name leds="logo" color="cleaning" transmit=0
    set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    _set_sb_leds_by_name leds="logo" color="meshing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    _set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0
    set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    _set_sb_leds_by_name leds="logo" color="printing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_end]
gcode:
    _set_sb_leds_by_name leds="logo" color="end" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="end" transmit=1