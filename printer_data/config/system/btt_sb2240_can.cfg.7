# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.



[temperature_sensor sb2240] #ebb_ntc
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[adxl345]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
probe_points: 175, 175, 20
accel_chip: adxl345

[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
gear_ratio: 50:10 #
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree #
rotation_distance: 22.517 #21.719844 #
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: Generic 3950 #EPCOS 100K B57560G104F #Generic 3950
sensor_pin: EBBCan: PA3
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 10 #
max_temp: 275 #
 #min_temp: 0
 #max_temp: 250
min_extrude_temp: 17
pressure_advance_smooth_time: 0.030

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2240 extruder]
cs_pin: EBBCan: PA15
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
driver_TPFD: 0
run_current: 0.5 #0.650
stealthchop_threshold: 0 #999999

[fan]
pin: EBBCan: PA1
kick_start_time: 0.5 #
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10 #

[heater_fan hotend_fan]
pin: EBBCan: PA0
kick_start_time: 0.5 #
heater: extruder
heater_temp: 50.0


#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

#neopixel hotend_rgb]
#pin: EBBCan:PD3

#[bltouch]
#sensor_pin: ^EBBCan: PB8
#control_pin: EBBCan: PB9
# !!!  down for Voron TAP  !!!
## NPN and PNP proximity switch types can be set by jumper
##[probe]
##pin: EBBCan: PB5 #^EBBCan: PC13

##[output_pin PB5]
##pin: EBBCan: PB5

##[output_pin PB7]
##pin: EBBCan: PB7

##[output_pin PB6]
##pin: EBBCan: PB6
#
#x_offset: 0
#y_offset: 0
##z_offset: 0
##speed: 15.0
#speed: 20.0
##samples: 3
#samples: 2
#samples_result: median
##sample_retract_dist: 1.0
#sample_retract_dist: 0.6
#samples_tolerance: 0.006
##samples_tolerance_retries: 3
#samples_tolerance_retries: 2
#
#activate_gcode:
#    {% set PROBE_TEMP = 150 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}
#
#    {% if TARGET_TEMP > PROBE_TEMP %}
#        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#        M109 S{ PROBE_TEMP }
#    {% else %}
#        # Temperature target is already low enough, but nozzle may still be too hot.
#        {% if ACTUAL_TEMP > MAX_TEMP %}
#            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#        {% endif %}
#    {% endif %}
